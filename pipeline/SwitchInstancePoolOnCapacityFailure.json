{
	"name": "SwitchInstancePoolOnCapacityFailure",
	"properties": {
		"activities": [
			{
				"name": "Run Notebook 1",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": {
						"value": "@pipeline().parameters.notebookPath",
						"type": "Expression"
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks2",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Check if failure capacity related",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Run Notebook 1",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@or(greater(indexOf(activity('Run Notebook 1').output.runError, 'INSTANCE_POOL_MAX_CAPACITY_REACHED'), 0) ,greater(indexOf(activity('Run Notebook 1').output.runError, 'SOME_OTHER_ERROR_STRING'), 0) )",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail1",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "ERROR_NOT_CAPACITY_RELATED",
								"errorCode": "123"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Run Notebook 2",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": {
									"value": "@pipeline().parameters.notebookPath",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureDatabricks1",
								"type": "LinkedServiceReference",
								"parameters": {
									"workspaceUrl": {
										"value": "@pipeline().parameters.workspaceUrl",
										"type": "Expression"
									},
									"instancePoolId": {
										"value": "@pipeline().parameters.failoverInstancePoolId",
										"type": "Expression"
									},
									"workspaceResourceId": {
										"value": "@pipeline().parameters.workspaceResourceId",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"notebookPath": {
				"type": "string"
			},
			"workspaceUrl": {
				"type": "string"
			},
			"initialInstancePoolId": {
				"type": "string"
			},
			"failoverInstancePoolId": {
				"type": "string"
			},
			"workspaceResourceId": {
				"type": "string"
			}
		},
		"variables": {
			"exitLoop": {
				"type": "Boolean",
				"defaultValue": false
			},
			"iterationCount": {
				"type": "String",
				"defaultValue": "1"
			},
			"iterationCountInternal": {
				"type": "String",
				"defaultValue": "1"
			},
			"activeWorkspaceUrl": {
				"type": "String"
			},
			"activeInstancePoolId": {
				"type": "String"
			},
			"failoverWorkpaceUrl": {
				"type": "String"
			},
			"failoverInstancePoolId": {
				"type": "String"
			},
			"activeWorkspaceResourceId": {
				"type": "String"
			},
			"failoverWorkspaceResourceId": {
				"type": "String"
			},
			"maxIterations": {
				"type": "Integer",
				"defaultValue": 2
			}
		},
		"folder": {
			"name": "ODCR Demo"
		},
		"annotations": [],
		"lastPublishTime": "2024-09-26T16:52:12Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
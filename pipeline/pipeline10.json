{
	"name": "pipeline10",
	"properties": {
		"activities": [
			{
				"name": "GetEventTypes",
				"type": "GetMetadata",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "LoopLogFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "SalesforceLogs",
						"type": "DatasetReference",
						"parameters": {
							"path": {
								"value": "@concat('salesforce/', 'f4436ff3-dffe-4d12-aaae-d648a9b1df72')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "GetEventTypes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetEventTypes').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureDataExplorerSink"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SalesforceLogs",
									"type": "DatasetReference",
									"parameters": {
										"path": {
											"value": "@concat('salesforce/', 'f4436ff3-dffe-4d12-aaae-d648a9b1df72/',item().name)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureDataExplorerTable2",
									"type": "DatasetReference",
									"parameters": {
										"table": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "GetSalesforceOauthToken",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "GetOAuthClientId",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "GetOAuthClientSecret",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": {
						"value": "@concat('https://cona.my.salesforce.com/services/oauth2/token?client_id=', activity('GetOAuthClientId').output.value, '&client_secret=', activity('GetOAuthClientSecret').output.value, '&grant_type=client_credentials')",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					}
				}
			},
			{
				"name": "GetOAuthClientId",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": "https://kv-mibecke-shared.vault.azure.net/secrets/cona-salesforce-client-id/d32e42f38db041e7a89b554323d29db5?api-version=7.0",
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "GetOAuthClientSecret",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": "https://kv-mibecke-shared.vault.azure.net/secrets/cona-salesforce-client-secret/96f223c734a7495db679b9624744ba4e?api-version=7.0",
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "GetListOfLogFiles",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "StoreAccessToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "@concat('Bearer ', variables('accessToken'))",
							"type": "Expression"
						}
					},
					"url": "https://cona.my.salesforce.com/services/data/v62.0/query?q=SELECT+Id,+EventType,+LogFile,+LogDate,+LogFileLength+FROM+EventLogFile+WHERE+CreatedDate+>+Yesterday+AND+EventType+in+(+'API'+,+'ApexCallout'+,+'ApexExecution'+,+'ApexRestApi'+,+'ApexSoap'+,+'ApexTrigger'+,+'ApexUnexpectedException'+,+'ApiTotalUsage'+,+'BulkApi'+,+'BulkApiRequest'+,+'BulkApi2'+,+'ConcurrentLongRunningApexLimit'+,+'FlowExecution'+,+'Login'+,+'LoginAs'+,+'QueuedExecution'+,+'RestApi'++)+and+interval+=+'Hourly'",
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					}
				}
			},
			{
				"name": "LoopLogFiles",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetListOfLogFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetListOfLogFiles').output.records",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "WriteLogFileToStorage",
							"type": "WebActivity",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "GetLogFile",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": true
							},
							"userProperties": [],
							"typeProperties": {
								"method": "PUT",
								"headers": {
									"x-ms-version": "2019-07-07",
									"x-ms-blob-type": "BlockBlob",
									"Authentication": "Managed Identity",
									"ContentEncoding": "gzip",
									"ContentType": "application/csv"
								},
								"url": {
									"value": "@concat('https://samibeckecus01.blob.core.windows.net/data/salesforce/', item().EventType, '.csv?resource=file')",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "AutoResolveIntegrationRuntime",
									"type": "IntegrationRuntimeReference"
								},
								"body": {
									"value": "@activity('GetLogFile').output.Response",
									"type": "Expression"
								},
								"authentication": {
									"type": "MSI",
									"resource": "https://storage.azure.com"
								}
							}
						},
						{
							"name": "GetLogFile",
							"type": "WebActivity",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": true,
								"secureInput": true
							},
							"userProperties": [],
							"typeProperties": {
								"method": "GET",
								"headers": {
									"Authorization": {
										"value": "@variables('BearerToken')",
										"type": "Expression"
									},
									"Content-Type": "application/csv",
									"Accept-Encoding": "gzip"
								},
								"url": {
									"value": "@concat('https://cona.my.salesforce.com/',item().LogFile)",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "AutoResolveIntegrationRuntime",
									"type": "IntegrationRuntimeReference"
								}
							}
						},
						{
							"name": "Azure Function1",
							"type": "AzureFunctionActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"functionName": "process_salesforce_logs",
								"body": {
									"value": "@concat('{\"logFileUrl\": \"https://cona.my.salesforce.com/\"', item().LogFile, '\"accessToken\": ', base64(variables('accessToken')), '\"storageAccountUrl\": \"https://rgconab540.blob.core.windows.net/salesforce', pipeline().RunId, '/', item().EventType, '}')",
									"type": "Expression"
								},
								"method": "POST"
							},
							"linkedServiceName": {
								"referenceName": "AzureFunction1",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "StoreAccessToken",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetSalesforceOauthToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "accessToken",
					"value": {
						"value": "@activity('GetSalesforceOauthToken').output.access_token",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"accessToken": {
				"type": "String"
			}
		},
		"folder": {
			"name": "adx"
		},
		"annotations": []
	}
}
{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-mibecke-cus-01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "loganalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Salesforce Data API",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "v62.0/query?q=SELECT+Id,+EventType,+LogFile,+LogDate,+LogFileLength+FROM+EventLogFile+WHERE+CreatedDate+>+Yesterday+AND+EventType+in+(+'API'+,+'ApexCallout'+,+'ApexExecution'+,+'ApexRestApi'+,+'ApexSoap'+,+'ApexTrigger'+,+'ApexUnexpectedException'+,+'ApiTotalUsage'+,+'BulkApi'+,+'BulkApiRequest'+,+'BulkApi2'+,+'ConcurrentLongRunningApexLimit'+,+'FlowExecution'+,+'Login'+,+'LoginAs'+,+'QueuedExecution'+,+'RestApi'++)+and+interval+=+'Hourly'"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Salesforce Data API",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceLogs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().path",
							"type": "Expression"
						},
						"container": "salesforce"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EVENT_TYPE",
						"type": "String"
					},
					{
						"name": "TIMESTAMP",
						"type": "String"
					},
					{
						"name": "REQUEST_ID",
						"type": "String"
					},
					{
						"name": "ORGANIZATION_ID",
						"type": "String"
					},
					{
						"name": "USER_ID",
						"type": "String"
					},
					{
						"name": "RUN_TIME",
						"type": "String"
					},
					{
						"name": "CPU_TIME",
						"type": "String"
					},
					{
						"name": "URI",
						"type": "String"
					},
					{
						"name": "SESSION_KEY",
						"type": "String"
					},
					{
						"name": "LOGIN_KEY",
						"type": "String"
					},
					{
						"name": "USER_TYPE",
						"type": "String"
					},
					{
						"name": "REQUEST_STATUS",
						"type": "String"
					},
					{
						"name": "DB_TOTAL_TIME",
						"type": "String"
					},
					{
						"name": "METHOD",
						"type": "String"
					},
					{
						"name": "MEDIA_TYPE",
						"type": "String"
					},
					{
						"name": "STATUS_CODE",
						"type": "String"
					},
					{
						"name": "USER_AGENT",
						"type": "String"
					},
					{
						"name": "ROWS_PROCESSED",
						"type": "String"
					},
					{
						"name": "NUMBER_FIELDS",
						"type": "String"
					},
					{
						"name": "DB_BLOCKS",
						"type": "String"
					},
					{
						"name": "DB_CPU_TIME",
						"type": "String"
					},
					{
						"name": "REQUEST_SIZE",
						"type": "String"
					},
					{
						"name": "RESPONSE_SIZE",
						"type": "String"
					},
					{
						"name": "ENTITY_NAME",
						"type": "String"
					},
					{
						"name": "CONNECTED_APP_ID",
						"type": "String"
					},
					{
						"name": "CLIENT_NAME",
						"type": "String"
					},
					{
						"name": "EXCEPTION_MESSAGE",
						"type": "String"
					},
					{
						"name": "TIMESTAMP_DERIVED",
						"type": "String"
					},
					{
						"name": "USER_ID_DERIVED",
						"type": "String"
					},
					{
						"name": "CLIENT_IP",
						"type": "String"
					},
					{
						"name": "URI_ID_DERIVED",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceObject1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Salesforce1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SalesforceV2Object",
				"schema": [],
				"typeProperties": {
					"objectApiName": "EventLogFile"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IngestLogsFromSalesforceToAdx')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetEventTypes",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "LoopLogFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SalesforceLogs",
								"type": "DatasetReference",
								"parameters": {
									"path": {
										"value": "@variables('pipelineRunId')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetEventTypes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetEventTypes').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "IngestLogFileToADX",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureDataExplorerSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SalesforceLogs",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@concat(variables('pipelineRunId'), '/', item().name)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureDataExplorerTable2",
											"type": "DatasetReference",
											"parameters": {
												"table": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "GetSalesforceOauthToken",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetOAuthClientId",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetOAuthClientSecret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://cona.my.salesforce.com/services/oauth2/token?client_id=', activity('GetOAuthClientId').output.value, '&client_secret=', activity('GetOAuthClientSecret').output.value, '&grant_type=client_credentials')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							}
						}
					},
					{
						"name": "GetOAuthClientId",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CheckIfPipelineRunIdOverridden",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kv-mibecke-shared.vault.azure.net/secrets/cona-salesforce-client-id/d32e42f38db041e7a89b554323d29db5?api-version=7.0",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetOAuthClientSecret",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CheckIfPipelineRunIdOverridden",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kv-mibecke-shared.vault.azure.net/secrets/cona-salesforce-client-secret/96f223c734a7495db679b9624744ba4e?api-version=7.0",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetListOfLogFiles",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "StoreAccessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"Authorization": {
									"value": "@concat('Bearer ', variables('accessToken'))",
									"type": "Expression"
								}
							},
							"url": "https://cona.my.salesforce.com/services/data/v62.0/query?q=SELECT+Id,+EventType,+LogFile,+LogDate,+LogFileLength+FROM+EventLogFile+WHERE+CreatedDate+>+Yesterday+AND+EventType+in+(+'API'+,+'ApexCallout'+,+'ApexExecution'+,+'ApexRestApi'+,+'ApexSoap'+,+'ApexTrigger'+,+'ApexUnexpectedException'+,+'ApiTotalUsage'+,+'BulkApi'+,+'BulkApiRequest'+,+'BulkApi2'+,+'ConcurrentLongRunningApexLimit'+,+'FlowExecution'+,+'Login'+,+'LoginAs'+,+'QueuedExecution'+,+'RestApi'++)+and+interval+=+'Hourly'",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							}
						}
					},
					{
						"name": "LoopLogFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetListOfLogFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetListOfLogFiles').output.records",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "PullLogFileToBlobStorage",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "process_salesforce_logs",
										"body": {
											"value": "@concat('{\"logFileUrl\": \"https://cona.my.salesforce.com', item().LogFile, '\",', '\"accessToken\": \"', base64(variables('accessToken')), '\",', '\"storageAccountUrl\": \"https://rgconab540.blob.core.windows.net/salesforce/', variables('pipelineRunId'), '/', item().EventType, '\"}')",
											"type": "Expression"
										},
										"headers": {},
										"method": "POST"
									},
									"linkedServiceName": {
										"referenceName": "AzureFunction1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DummySetOnFailure",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "PullLogFileToBlobStorage",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "lastActivityFailure",
										"value": "dummy!"
									}
								}
							]
						}
					},
					{
						"name": "StoreAccessToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetSalesforceOauthToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "accessToken",
							"value": {
								"value": "@activity('GetSalesforceOauthToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CheckIfPipelineRunIdOverridden",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.pipelineRunId, null))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "UsePipelineRunId",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineRunId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "OverridePipelineRunId",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineRunId",
										"value": {
											"value": "@pipeline().parameters.pipelineRunId",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pipelineRunId": {
						"type": "string"
					}
				},
				"variables": {
					"accessToken": {
						"type": "String"
					},
					"pipelineRunId": {
						"type": "String"
					},
					"lastActivityFailure": {
						"type": "String"
					}
				},
				"folder": {
					"name": "adx"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureDataExplorerSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "string"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureDataExplorerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "adx"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "RestSink",
								"httpRequestTimeout": "00:05:00",
								"requestInterval": 10,
								"requestMethod": "POST",
								"writeBatchSize": 10000,
								"httpCompressionType": "none"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['timestamp']"
										},
										"sink": {
											"path": "$['timestamp']"
										}
									},
									{
										"source": {
											"path": "$['logEntry']"
										},
										"sink": {
											"path": "$['logEntry']"
										}
									},
									{
										"source": {
											"path": "$['AdditionalContext']"
										},
										"sink": {
											"path": "$['AdditionalContext']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "adx"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tryJobPoolThenFallbackOnOdcrInstancePool')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SwitchLinkedServiceOnCapacityFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"notebookPath": "/Workspace/Users/admin@mngenvmcap469791.onmicrosoft.com/job1",
								"workspaceUrl": "https://adb-3001519857218975.15.azuredatabricks.net/",
								"instancePoolId": "1105-210744-foray3-pool-306c6t24",
								"workspaceResourceId": "/subscriptions/7a074df0-d2da-4def-92f3-cef1819caf9e/resourceGroups/rg-data/providers/Microsoft.Databricks/workspaces/adb-cus-01",
								"acceptedErrorMessages": {
									"value": "@pipeline().parameters.acceptedErrorMessages",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"acceptedErrorMessages": {
						"type": "string",
						"defaultValue": [
							"AZURE_QUOTA_EXCEEDED_EXCEPTION",
							"INSTANCE_POOL_MAX_CAPACITY_REACHED"
						]
					}
				},
				"folder": {
					"name": "ODCR Demo"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SalesforceLogs",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureDataExplorerTable2",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          EVENT_TYPE as string,",
						"          TIMESTAMP as string,",
						"          REQUEST_ID as string,",
						"          ORGANIZATION_ID as string,",
						"          USER_ID as string,",
						"          RUN_TIME as string,",
						"          CPU_TIME as string,",
						"          URI as string,",
						"          SESSION_KEY as string,",
						"          LOGIN_KEY as string,",
						"          USER_TYPE as string,",
						"          REQUEST_STATUS as string,",
						"          DB_TOTAL_TIME as string,",
						"          METHOD as string,",
						"          MEDIA_TYPE as string,",
						"          STATUS_CODE as string,",
						"          USER_AGENT as string,",
						"          ROWS_PROCESSED as string,",
						"          NUMBER_FIELDS as string,",
						"          DB_BLOCKS as string,",
						"          DB_CPU_TIME as string,",
						"          REQUEST_SIZE as string,",
						"          RESPONSE_SIZE as string,",
						"          ENTITY_NAME as string,",
						"          CONNECTED_APP_ID as string,",
						"          CLIENT_NAME as string,",
						"          EXCEPTION_MESSAGE as string,",
						"          TIMESTAMP_DERIVED as string,",
						"          USER_ID_DERIVED as string,",
						"          CLIENT_IP as string,",
						"          URI_ID_DERIVED as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EVENT_TYPE as string,",
						"          TIMESTAMP as string,",
						"          REQUEST_ID as string,",
						"          ORGANIZATION_ID as string,",
						"          USER_ID as string,",
						"          RUN_TIME as string,",
						"          CPU_TIME as string,",
						"          URI as string,",
						"          SESSION_KEY as string,",
						"          LOGIN_KEY as string,",
						"          USER_TYPE as string,",
						"          REQUEST_STATUS as string,",
						"          DB_TOTAL_TIME as string,",
						"          METHOD as string,",
						"          MEDIA_TYPE as string,",
						"          STATUS_CODE as string,",
						"          USER_AGENT as string,",
						"          ROWS_PROCESSED as string,",
						"          NUMBER_FIELDS as string,",
						"          DB_BLOCKS as string,",
						"          DB_CPU_TIME as string,",
						"          REQUEST_SIZE as string,",
						"          RESPONSE_SIZE as string,",
						"          ENTITY_NAME as string,",
						"          CONNECTED_APP_ID as string,",
						"          CLIENT_NAME as string,",
						"          EXCEPTION_MESSAGE as string,",
						"          TIMESTAMP_DERIVED as string,",
						"          USER_ID_DERIVED as string,",
						"          CLIENT_IP as string,",
						"          URI_ID_DERIVED as string",
						"     ),",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceLogs')]"
			]
		}
	]
}
{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-mibecke-cus-01"
		},
		"default_properties_primaryWorkspaceUrl_value": {
			"type": "string",
			"defaultValue": "https://adb-3001519857218975.15.azuredatabricks.net"
		},
		"default_properties_failoverWorkspaceUrl_value": {
			"type": "string",
			"defaultValue": "https://adb-1386680983746450.10.azuredatabricks.net/"
		},
		"default_properties_primaryWorkspaceResourceId_value": {
			"type": "string",
			"defaultValue": "/subscriptions/7a074df0-d2da-4def-92f3-cef1819caf9e/resourceGroups/rg-data/providers/Microsoft.Databricks/workspaces/adb-cus-01"
		},
		"default_properties_failoverWorkspaceResourceId_value": {
			"type": "string",
			"defaultValue": "/subscriptions/7a074df0-d2da-4def-92f3-cef1819caf9e/resourceGroups/rg-data/providers/Microsoft.Databricks/workspaces/adb-eus2-01"
		},
		"default_properties_primaryInstancePoolId_value": {
			"type": "string",
			"defaultValue": "0923-201003-yarn12-pool-n1bcdevw"
		},
		"default_properties_failoverInstancePoolId_value": {
			"type": "string",
			"defaultValue": "0923-200944-gym276-pool-ezzwvw1s"
		},
		"AzureSynapseAnalytics432_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/7a074df0-d2da-4def-92f3-cef1819caf9e/resourceGroups/rg-synapse/providers/Microsoft.Synapse/workspaces/syn-mibecke-cus-01"
		},
		"AzureSynapseAnalytics432_properties_groupId": {
			"type": "string",
			"defaultValue": "sql"
		},
		"AzureSynapseAnalytics432_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"syn-mibecke-cus-01.sql.azuresynapse.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/globalparameters",
			"apiVersion": "2018-06-01",
			"properties": {
				"primaryWorkspaceUrl": {
					"type": "string",
					"value": "[parameters('default_properties_primaryWorkspaceUrl_value')]"
				},
				"failoverWorkspaceUrl": {
					"type": "string",
					"value": "[parameters('default_properties_failoverWorkspaceUrl_value')]"
				},
				"primaryWorkspaceResourceId": {
					"type": "string",
					"value": "[parameters('default_properties_primaryWorkspaceResourceId_value')]"
				},
				"failoverWorkspaceResourceId": {
					"type": "string",
					"value": "[parameters('default_properties_failoverWorkspaceResourceId_value')]"
				},
				"primaryInstancePoolId": {
					"type": "string",
					"value": "[parameters('default_properties_primaryInstancePoolId_value')]"
				},
				"failoverInstancePoolId": {
					"type": "string",
					"value": "[parameters('default_properties_failoverInstancePoolId_value')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"workspaceUrl": {
						"type": "string"
					},
					"instancePoolId": {
						"type": "string"
					},
					"workspaceResourceId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "@linkedService().workspaceUrl",
					"authentication": "MSI",
					"workspaceResourceId": "@linkedService().workspaceResourceId",
					"instancePoolId": "@linkedService().instancePoolId",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "15.4.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RetryOnCapacityFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop Until Capacity Available",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(greater(int(variables('iterationCount')), pipeline().parameters.maxIterations), variables('exitLoop'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Run Notebook",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@pipeline().parameters.notebookPath",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference",
										"parameters": {
											"workspaceUrl": "https://adb-3001519857218975.15.azuredatabricks.net/",
											"instancePoolId": "0923-201003-yarn12-pool-n1bcdevw",
											"workspaceResourceId": "/subscriptions/7a074df0-d2da-4def-92f3-cef1819caf9e/resourceGroups/rg-data/providers/Microsoft.Databricks/workspaces/adb-cus-01"
										}
									}
								},
								{
									"name": "set exitLoop true",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Run Notebook",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "exitLoop",
										"value": true
									}
								},
								{
									"name": "Check if failure capacity related",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Run Notebook",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(greater(indexOf(activity('Run Notebook').output.runError, 'INSTANCE_POOL_MAX_CAPACITY_REACHED'), 0) ,greater(indexOf(activity('Run Notebook').output.runError, 'SOME_OTHER_ERROR_STRING'), 0) )",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "set exitLoop true 2",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "exitLoop",
													"value": true
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "set exitLoop false",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "increment iteration count",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "exitLoop",
													"value": false
												}
											},
											{
												"name": "wait",
												"type": "Wait",
												"dependsOn": [
													{
														"activity": "set exitLoop false",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": {
														"value": "@pipeline().parameters.retryIntervalSeconds",
														"type": "Expression"
													}
												}
											},
											{
												"name": "increment iterationCountInternal",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "iterationCountInternal",
													"value": {
														"value": "@string(add(int(variables('iterationCount')),1))",
														"type": "Expression"
													}
												}
											},
											{
												"name": "increment iteration count",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "increment iterationCountInternal",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "iterationCount",
													"value": {
														"value": "@variables('iterationCountInternal')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Fail if max iteration count exceeded",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Run Notebook",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(int(variables('iterationCount')), pipeline().parameters.maxIterations)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Fail1",
												"type": "Fail",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"message": "Max iterations exceeded",
													"errorCode": "666"
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"maxIterations": {
						"type": "int",
						"defaultValue": 10
					},
					"notebookPath": {
						"type": "string"
					},
					"retryIntervalSeconds": {
						"type": "int",
						"defaultValue": 300
					}
				},
				"variables": {
					"exitLoop": {
						"type": "Boolean",
						"defaultValue": false
					},
					"iterationCount": {
						"type": "String",
						"defaultValue": "1"
					},
					"iterationCountInternal": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"folder": {
					"name": "Other resilience stuff"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T16:52:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SwitchWorkspaceOnCapacityFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop Until Capacity Available",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable5",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(greater(int(variables('iterationCount')), variables('maxIterations')), variables('exitLoop'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Run Notebook",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@pipeline().parameters.notebookPath",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference",
										"parameters": {
											"workspaceUrl": {
												"value": "@variables('activeWorkspaceUrl')",
												"type": "Expression"
											},
											"instancePoolId": {
												"value": "@variables('activeInstancePoolId')",
												"type": "Expression"
											},
											"workspaceResourceId": {
												"value": "@variables('activeWorkspaceResourceId')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "set exitLoop true",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Run Notebook",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "exitLoop",
										"value": true
									}
								},
								{
									"name": "Check if failure capacity related",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Run Notebook",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(greater(indexOf(activity('Run Notebook').output.runError, 'INSTANCE_POOL_MAX_CAPACITY_REACHED'), 0) ,greater(indexOf(activity('Run Notebook').output.runError, 'SOME_OTHER_ERROR_STRING'), 0) )",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "set exitLoop true 2",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "exitLoop",
													"value": true
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "set exitLoop false",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "increment iteration count",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "swapWorkspaceUrl",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "swapInstancePoolId",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "swapeResourceId",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "exitLoop",
													"value": false
												}
											},
											{
												"name": "increment iterationCountInternal",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "iterationCountInternal",
													"value": {
														"value": "@string(add(int(variables('iterationCount')),1))",
														"type": "Expression"
													}
												}
											},
											{
												"name": "increment iteration count",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "increment iterationCountInternal",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "iterationCount",
													"value": {
														"value": "@variables('iterationCountInternal')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "swapWorkspaceUrl",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "activeWorkspaceUrl",
													"value": {
														"value": "@variables('failoverWorkpaceUrl')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "swapInstancePoolId",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "activeInstancePoolId",
													"value": {
														"value": "@variables('failoverInstancePoolId')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "swapeResourceId",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "activeWorkspaceResourceId",
													"value": {
														"value": "@variables('failoverWorkspaceResourceId')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Fail if max iteration count exceeded",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Run Notebook",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(int(variables('iterationCount')), variables('maxIterations'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Fail1",
												"type": "Fail",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"message": "Max iterations exceeded",
													"errorCode": "666"
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "activeWorkspaceUrl",
							"value": {
								"value": "@pipeline().parameters.activeWorkspaceUrl",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "activeInstancePoolId",
							"value": {
								"value": "@pipeline().parameters.activeInstancePoolId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "failoverWorkpaceUrl",
							"value": {
								"value": "@pipeline().parameters.failoverWorkpaceUrl",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable4",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "failoverInstancePoolId",
							"value": {
								"value": "@pipeline().parameters.failoverInstancePoolId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable5",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "activeWorkspaceResourceId",
							"value": {
								"value": "@pipeline().parameters.activeWorkspaceResourceId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable6",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "failoverWorkspaceResourceId",
							"value": {
								"value": "@pipeline().parameters.failoverWorkspaceResourceId",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"notebookPath": {
						"type": "string"
					},
					"retryIntervalSeconds": {
						"type": "int",
						"defaultValue": 300
					},
					"activeWorkspaceUrl": {
						"type": "string"
					},
					"activeInstancePoolId": {
						"type": "string"
					},
					"failoverWorkpaceUrl": {
						"type": "string"
					},
					"failoverInstancePoolId": {
						"type": "string"
					},
					"activeWorkspaceResourceId": {
						"type": "string"
					},
					"failoverWorkspaceResourceId": {
						"type": "string"
					}
				},
				"variables": {
					"exitLoop": {
						"type": "Boolean",
						"defaultValue": false
					},
					"iterationCount": {
						"type": "String",
						"defaultValue": "1"
					},
					"iterationCountInternal": {
						"type": "String",
						"defaultValue": "1"
					},
					"activeWorkspaceUrl": {
						"type": "String"
					},
					"activeInstancePoolId": {
						"type": "String"
					},
					"failoverWorkpaceUrl": {
						"type": "String"
					},
					"failoverInstancePoolId": {
						"type": "String"
					},
					"activeWorkspaceResourceId": {
						"type": "String"
					},
					"failoverWorkspaceResourceId": {
						"type": "String"
					},
					"maxIterations": {
						"type": "Integer",
						"defaultValue": 2
					}
				},
				"folder": {
					"name": "Other resilience stuff"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T16:52:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureSynapseAnalytics432')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureSynapseAnalytics432_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureSynapseAnalytics432_properties_groupId')]",
				"fqdns": "[parameters('AzureSynapseAnalytics432_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RepairTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "REPAIR TABLE",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"url": {
								"value": "@{pipeline().parameters.workspaceUrl}/api/2.0/sql/statements",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"body": {
								"value": "{\"statement\":\"REPAIR TABLE @{pipeline().parameters.tableName} SYNC METADATA\",\"warehouse_id\":\"@{pipeline().parameters.warehouseId}\"}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "2ff814a6-3304-4ab8-85cb-cd0e6f879c1d"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"workspaceUrl": {
						"type": "string"
					},
					"tableName": {
						"type": "string"
					},
					"warehouseId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Old"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FaultTolerantDatabricksNotebook",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RetryOnCapacityFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"maxIterations": 2,
								"notebookPath": "/Workspace/Users/admin@mngenvmcap469791.onmicrosoft.com/job1",
								"retryIntervalSeconds": 120
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Old"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-23T21:00:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RetryOnCapacityFailure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FaultTolerantDatabricksNotebook",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SwitchWorkspaceOnCapacityFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"notebookPath": "/Workspace/Users/admin@mngenvmcap469791.onmicrosoft.com/job1",
								"activeWorkspaceUrl": {
									"value": "@pipeline().globalParameters.primaryWorkspaceUrl",
									"type": "Expression"
								},
								"activeInstancePoolId": {
									"value": "@pipeline().globalParameters.primaryInstancePoolId",
									"type": "Expression"
								},
								"failoverWorkpaceUrl": {
									"value": "@pipeline().globalParameters.failoverWorkspaceUrl",
									"type": "Expression"
								},
								"failoverInstancePoolId": {
									"value": "@pipeline().globalParameters.failoverInstancePoolId",
									"type": "Expression"
								},
								"activeWorkspaceResourceId": {
									"value": "@pipeline().globalParameters.primaryWorkspaceResourceId",
									"type": "Expression"
								},
								"failoverWorkspaceResourceId": {
									"value": "@pipeline().globalParameters.failoverWorkspaceResourceId",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Old"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-23T21:00:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SwitchWorkspaceOnCapacityFailure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "REPAIR TABLE",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"url": "https://adb-1386680983746450.10.azuredatabricks.net/api/2.0/sql/statements",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"body": {
								"statement": "REPAIR TABLE samibeckecus02.default.data3 SYNC METADATA",
								"warehouse_id": "3fe3ae28df670188"
							},
							"authentication": {
								"type": "MSI",
								"resource": "2ff814a6-3304-4ab8-85cb-cd0e6f879c1d"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Old"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3001519857218975.15.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/7a074df0-d2da-4def-92f3-cef1819caf9e/resourceGroups/rg-data/providers/Microsoft.Databricks/workspaces/adb-cus-01",
					"newClusterNodeType": "Standard_E80ids_v4",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "15.4.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SwitchInstancePoolOnCapacityFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Run Notebook 1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.notebookPath",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Check if failure capacity related",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Run Notebook 1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(greater(indexOf(activity('Run Notebook 1').output.runError, 'INSTANCE_POOL_MAX_CAPACITY_REACHED'), 0) ,greater(indexOf(activity('Run Notebook 1').output.runError, 'QuotaExceeded'), 0) )",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "ERROR_NOT_CAPACITY_RELATED",
										"errorCode": "123"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Run Notebook 2",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@pipeline().parameters.notebookPath",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference",
										"parameters": {
											"workspaceUrl": {
												"value": "@pipeline().parameters.workspaceUrl",
												"type": "Expression"
											},
											"instancePoolId": {
												"value": "@pipeline().parameters.failoverInstancePoolId",
												"type": "Expression"
											},
											"workspaceResourceId": {
												"value": "@pipeline().parameters.workspaceResourceId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"notebookPath": {
						"type": "string"
					},
					"workspaceUrl": {
						"type": "string"
					},
					"initialInstancePoolId": {
						"type": "string"
					},
					"failoverInstancePoolId": {
						"type": "string"
					},
					"workspaceResourceId": {
						"type": "string"
					}
				},
				"variables": {
					"exitLoop": {
						"type": "Boolean",
						"defaultValue": false
					},
					"iterationCount": {
						"type": "String",
						"defaultValue": "1"
					},
					"iterationCountInternal": {
						"type": "String",
						"defaultValue": "1"
					},
					"activeWorkspaceUrl": {
						"type": "String"
					},
					"activeInstancePoolId": {
						"type": "String"
					},
					"failoverWorkpaceUrl": {
						"type": "String"
					},
					"failoverInstancePoolId": {
						"type": "String"
					},
					"activeWorkspaceResourceId": {
						"type": "String"
					},
					"failoverWorkspaceResourceId": {
						"type": "String"
					},
					"maxIterations": {
						"type": "Integer",
						"defaultValue": 2
					}
				},
				"folder": {
					"name": "ODCR Demo"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T16:52:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks2')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RepairTable",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"workspaceUrl": "https://adb-1386680983746450.10.azuredatabricks.net",
								"tableName": "samibeckecus02.default.data3",
								"warehouseId": "3fe3ae28df670188"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Old"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RepairTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/odcrInstancePoolDemoPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SwitchInstancePoolOnCapacityFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"notebookPath": "/Workspace/Users/admin@mngenvmcap469791.onmicrosoft.com/job1",
								"workspaceUrl": "https://adb-3001519857218975.15.azuredatabricks.net/",
								"initialInstancePoolId": "1105-210710-awing2-pool-bv7hvz4s",
								"failoverInstancePoolId": "1105-210744-foray3-pool-306c6t24",
								"workspaceResourceId": "/subscriptions/7a074df0-d2da-4def-92f3-cef1819caf9e/resourceGroups/rg-data/providers/Microsoft.Databricks/workspaces/adb-cus-01"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ODCR Demo"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SwitchInstancePoolOnCapacityFailure')]"
			]
		}
	]
}